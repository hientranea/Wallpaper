name: Run tests

on:
  push:
    branches: [ "master", "setup-ci" ]
  pull_request:
    branches: [ "master" ]

jobs:
  test:
    runs-on: ubuntu-latest
    environment: staging
    permissions:
      security-events: write
    steps:
      - name: Checkout the code
        uses: actions/checkout@v3
      - name: Load keys from secrets
        env:
          BASE_URL: ${{ secrets.BASE_URL }}
          PEXEL_API_KEY: ${{ secrets.PEXEL_API_KEY }}
        run: printf "BASE_URL=\"$BASE_URL\"\nPEXEL_API_KEY=\"$PEXEL_API_KEY\"" > ./local.properties
      - name: Caching gradle
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-${{ hashFiles('**/*.gradle*') }}-${{ hashFiles('**/gradle/wrapper/gradle-wrapper.properties') }}
      - name: Setup JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: gradle
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - name: Run unit test
        run:  ./gradlew testDebugUnitTest --stacktrace
  ui-test:
    runs-on: macos-latest
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: Load keys from secrets
        env:
          BASE_URL: ${{ secrets.BASE_URL }}
          PEXEL_API_KEY: ${{ secrets.PEXEL_API_KEY }}
        run: printf "BASE_URL=\"$BASE_URL\"\nPEXEL_API_KEY=\"$PEXEL_API_KEY\"" > ./local.properties
      - name: Caching gradle
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-${{ hashFiles('**/*.gradle*') }}-${{ hashFiles('**/gradle/wrapper/gradle-wrapper.properties') }}
      - name: Setup JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: gradle
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - name: AVD cache
        uses: actions/cache@v3
        id: avd-cache
        with:
          path: |
            ~/.android/avd/*
            ~/.android/adb*
          key: avd-24
      - name: create AVD and generate snapshot for caching
        if: steps.avd-cache.outputs.cache-hit != 'true'
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 24
          force-avd-creation: false
          emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          disable-animations: false
          script: echo "Generated AVD snapshot for caching."
      - name: run tests
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 24
          force-avd-creation: false
          emulator-options: -no-snapshot-save -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          disable-animations: true
          script: ./gradlew connectedDebugAndroidTest
      - name: Upload androidTest-results
        uses: actions/upload-artifact@v3
        with:
          name: androidTest-results
          path: './app/build/outputs/androidTest-results'
